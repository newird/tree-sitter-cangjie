===
variable declaration
===


let `let` = "a" ;
let a: Int32 = 123;
var b = "hello world";
const c = true;
let d = r'好';

// 字符串插值
let name = "仓颉";
let message = "你好, ${name}!";

 --- 
 (source_file [0, 0] - [9, 0]
  (variable_declaration [0, 0] - [0, 17]
    name: (identifier [0, 4] - [0, 9])
    value: (initializer [0, 10] - [0, 15]
      (line_string_literal [0, 12] - [0, 15]
        text: (line_str_text [0, 13] - [0, 14]))))
  (variable_declaration [1, 0] - [1, 19]
    name: (identifier [1, 4] - [1, 5])
    type: (type_annotation [1, 5] - [1, 12]
      (primitive_type [1, 7] - [1, 12]))
    value: (initializer [1, 13] - [1, 18]
      (integer_literal [1, 15] - [1, 18])))
  (variable_declaration [2, 0] - [2, 22]
    name: (identifier [2, 4] - [2, 5])
    value: (initializer [2, 6] - [2, 21]
      (line_string_literal [2, 8] - [2, 21]
        text: (line_str_text [2, 9] - [2, 20]))))
  (variable_declaration [3, 0] - [3, 15]
    name: (identifier [3, 6] - [3, 7])
    value: (initializer [3, 8] - [3, 14]
      (boolean_literal [3, 10] - [3, 14])))
  (variable_declaration [4, 0] - [4, 15]
    name: (identifier [4, 4] - [4, 5])
    value: (initializer [4, 6] - [4, 14]
      (rune_literal [4, 8] - [4, 14])))
  (line_comment [6, 0] - [6, 18])
  (variable_declaration [7, 0] - [7, 20]
    name: (identifier [7, 4] - [7, 8])
    value: (initializer [7, 9] - [7, 19]
      (line_string_literal [7, 11] - [7, 19]
        text: (line_str_text [7, 12] - [7, 18]))))
  (variable_declaration [8, 0] - [8, 33]
    name: (identifier [8, 4] - [8, 11])
    value: (initializer [8, 12] - [8, 32]
      (line_string_literal [8, 14] - [8, 32]
        text: (line_str_text [8, 15] - [8, 31])))))

